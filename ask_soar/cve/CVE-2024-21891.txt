

A vulnerability (CVE-2024-21891) has been discovered in Node.js, a popular JavaScript runtime environment. The vulnerability arises from Node.js's dependence on multiple built-in utility functions to normalize paths provided to node:fs functions, which can be overwritten with user-defined implementations leading to a filesystem permission model bypass through path traversal attack. This vulnerability affects all users using the experimental permission model in Node.js 20 and Node.js 21.

The vulnerability was discovered by a security researcher who reported it to HackerOne, a vulnerability disclosure platform. The vulnerability has been assigned a CVSS score of 7.9, indicating a high severity. The attack vector is local, and the attack complexity is low, requiring low privileges and user interaction. The vulnerability has a high impact on confidentiality and integrity, but no impact on availability.

The vulnerability has been identified as a path traversal attack, which allows an attacker to access unauthorized files or directories. This can lead to sensitive data exposure, data tampering, or even code execution. The vulnerability is caused by the use of user-defined implementations of path normalization functions, which can be exploited to bypass security controls and access restricted files or directories.

The vulnerability has been confirmed by the Node.js security team, and a patch has been released to address the issue. Users are advised to update their Node.js versions to the latest patched version to mitigate the vulnerability. Additionally, users should exercise caution when using the experimental permission model in Node.js, as it may introduce additional security risks.

In summary, a high-severity vulnerability has been discovered in Node.js, which can be exploited through a path traversal attack. Users are advised to update their Node.js versions and exercise caution when using the experimental permission model.